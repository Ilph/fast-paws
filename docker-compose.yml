version: '3.9'

services:
  nginx:
    container_name: nginx
    image: nginx:1.24-alpine
    restart: always
    depends_on:
      - server
      - postgres
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - ./nginx/certificate:/etc/ssl/certificate
    networks:
      - fastpaws

  server:
    container_name: fastpaws-server
    image: fastpaws-server
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
      # POSTGRES_HOST: host.docker.internal
      POSTGRES_HOST: postgres
    # command: sh -c "echo '  ➜ ⏳ Waiting for ${POSTGRES_DB}...' && ./wait-for.sh postgres:${POSTGRES_PORT} -- node /app/index.js"
    command: sh -c "node /app/index.js"
    networks:
      - fastpaws

  postgres:
    container_name: postgres
    image: postgres:15.3
    restart: always
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - ./tmp/pgdata:/var/lib/postgresql/data
    networks:
      - fastpaws

networks:
  fastpaws:
    name: fastpaws-network
